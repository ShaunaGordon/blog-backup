<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: themes | Shauna Gordon]]></title>
  <link href="http://ShaunaGordon.com/blog/categories/themes/atom.xml" rel="self"/>
  <link href="http://ShaunaGordon.com/"/>
  <updated>2014-10-31T02:35:10+00:00</updated>
  <id>http://ShaunaGordon.com/</id>
  <author>
    <name><![CDATA[Shauna Gordon]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Project: Octopress Theme Toytown]]></title>
    <link href="http://ShaunaGordon.com/blog/2013/01/25/project-octopress-theme-toytown/"/>
    <updated>2013-01-25T09:51:00+00:00</updated>
    <id>http://ShaunaGordon.com/blog/2013/01/25/project-octopress-theme-toytown</id>
    <content type="html"><![CDATA[<p>As part of yet another redesign and blog migration, I needed to create a theme that wasn&rsquo;t so stock. I migrated my site to <a href="http://octopress.org/">Octopress</a>, a blogging platform that runs on GitHub&rsquo;s <a href="http://jekyllrb.com/">Jekyll</a> static site generator. It&rsquo;s a great platform, as anyone who follows my Twitter or Google+ accounts is aware, but the vast majority of sites that run on Octopress use the default theme, or some slight variation thereof. As good and nice as the default theme is, it&rsquo;s become very generic. I needed something different.</p>

<!-- more -->


<h2>Why &ldquo;Toytown&rdquo;?</h2>

<p>The entire theme is based around the image in the background. That image is actually one of the views I get to see in the mornings and evenings when I go to and leave from work.</p>

<p>You see, my office is located in one of the biggest shopping districts in the city, and it&rsquo;s pretty unique in that it&rsquo;s built as a blend between an indoor shopping mall and street-facing shops. Every year for the holidays (and evidently, well into the new year, for whatever reason), they string up lights on every building. It always reminds me of a gingerbread town, because of the way the lights are done &ndash; it&rsquo;s &ldquo;warm&rdquo; white rope lights lined along the corners and some other accent lines, much the same way you&rsquo;d have the frosting on a gingerbread building. They also have a couple of giant Christmas trees in the main open areas to the north and south of the main &ldquo;mall&rdquo; area. I have no doubt that, if viewed from above, in, say, a helicopter, it would look more like something you&rsquo;d find in a toy or model train store than an actual shopping center.</p>

<h2>The Keystone of the Theme</h2>

<p>Combine the natural &ldquo;toy-like&rdquo; aspect of the area this time of year, with the view from a few dozen feet above ground level, and a little manipulation in Gimp to create a <a href="http://www.inspiration.scottphotographics.com/amazing-miniature-tilt-shift-photography/">tilt-shift miniature effect</a>, and you end up with a fun background that looks more like a model than a real place.</p>

<p>The first image I had of it wasn&rsquo;t as high quality as I&rsquo;d like, due to having taken it with my smartphone, especially at the scale needed to adequately make it a background for a website. So, as much as I loved the image itself (because it was late enough in the morning to be &ldquo;daytime&rdquo;, but you could still see the lights on the buildings), I decided to go out and take more pictures, this time with an actual camera. (Note: as of 1/25/13, the &ldquo;first image&rdquo; is still the one used. I don&rsquo;t have access to an SD card reader at the moment, so I can&rsquo;t get the pictures off of my camera.)</p>

<p>It&rsquo;s also this image that I derived the color theme from, with the aid of the wonderfully useful <a href="http://colorschemedesigner.com">Color Scheme Designer</a>. The entire theme actually consists of just three base colors, with which I played with shades, hues, and opacity to achieve the desired effects.</p>

<p>Ah, the joys of working in the digital realm.</p>

<h2>Layout</h2>

<p>Since it&rsquo;s largely a blog these days (I still have my &ldquo;About&rdquo; page, which has the online version of my resume and will eventually sport the download options, as well, but the main focal point is the blog), I decided to stick with the two-column theme, allowing for various supplementary things, such as recent or related posts, tag clouds, and so forth.</p>

<p>Additionally, I&rsquo;ve made the site responsive. Anything above a 920px wide screen (or its rought equivalent, as it also responds to text size; more on that later), will have a single-column experience, with the extra goodies at the bottom. As the viewport gets smaller, some items will even shift their layout entirely, to accommodate the typical touch input of what are typically smaller screens. I also drop out the background image entirely (or rather, I don&rsquo;t add it in until larger sizes), to help keep bandwidth lower on devices that are more likely to be on a connection where download size is important.</p>

<h2>320 and Up? Kind of.</h2>

<p>One of the big new paradigms in web development is what&rsquo;s known as &ldquo;mobile first&rdquo; development. Among the large frameworks and bootstrapping tools is <a href="http://www.stuffandnonsense.co.uk/blog/about/this_is_the_new_320_and_up">320 and Up</a>, which starts its <abbr title="Cascading Style Sheets">CSS</abbr> media query &ldquo;breakpoints&rdquo; with 320px wide (the most narrow viewport size that most modern smartphones use) and work up from there.
Surround your pullquote like this {" text to be quoted "}
Until 1px no longer equals 1px.</p>

<p>This is exactly what we&rsquo;re seeing with the new high-density (&ldquo;retina&rdquo;) displays, which have upwards of two or more times the number of Dots Per Inch as a 96<abbr title="Dots Per Inch">DPI</abbr> screen. To compound matters, these new devices don&rsquo;t have the same pixel densities. In fact, their densities are <a href="http://en.wikipedia.org/wiki/List_of_displays_by_pixel_density#Devices_by_manufacturers">all over the map</a>. 151, 132, 202, etc. Even if you go off of the &ldquo;CSS pixel ratio&rdquo;, you still have 1, 1.325, 1.5, 2, and who-knows-what else in the future (and you <em>know</em> not all of the real pixel densities match well to the &ldquo;CSS pixel ratio&rdquo;).</p>

<p>Oh yeah, and, in part because of the above, these devices basically lie about their resolutions. The &ldquo;Retina&rdquo; iPhones report their resolutions as half of what they actually are. Additionally, some devices will increase their font size, but report a resolution that looks like a desktop.</p>

<p>So what to do? <a href="http://blog.cloudfour.com/the-ems-have-it-proportional-media-queries-ftw/">How about not use pixel-based media queries to begin with?</a> This has two added bonuses &ndash; you no longer have to worry about CSS pixel to device pixel differences, and you can adjust based on zoom level.</p>

<p>Go ahead, zoom in on the site. Isn&rsquo;t that cool?</p>

<p>It&rsquo;s one of the first projects I&rsquo;ve actually done using the &ldquo;mobile-first&rdquo; paradigm, as well as using EMs, so it could probably use some polish, but it was fun to learn, and it even looks good on my Android devices.</p>

<h2>Other Technologies</h2>

<h3>HTML5 and CSS</h3>

<p>Since it&rsquo;s an Octopress theme, it makes heavy use of HTML5, <a href="http://sass-lang.com">Sass</a>, and <a href="http://compass-style.org/">Compass</a>. I didn&rsquo;t do much with the HTML (I didn&rsquo;t need to), but I rewrote the CSS to better fit my programming style and make it simpler to do a simple color scheme change, without having to guess at the variable names.</p>

<p>There is also a fair amount of CSS3 thrown into the mix, with a couple of transitions (namely, mouseover effects for the links), some rounded corners, and alpha-transparent backgrounds.</p>

<h3>Ruby and YAML</h3>

<p>Most of this section doesn&rsquo;t really relate to the theme itself, but since building the theme was part of the project of redoing my site, I&rsquo;m just going to include this, as well. The theme itself really only needs the HTML and CSS related stuff.</p>

<p>Since GitHub is a Ruby shop, it&rsquo;s only natural that Jekyll and, by extension, Octopress are Ruby based. I didn&rsquo;t delve a whole lot into the Ruby code, but I did use it a little to customize a couple of plugins I found (incidentally, before I found better ones), and to add a little template logic into the header section, to display things like a link to GitHub, or a &ldquo;Highlights&rdquo; page (in my case, I used the &ldquo;Highlights&rdquo; page to list all entries under the &ldquo;projects&rdquo; category). I also added a couple entries to the Gemfile to add the GSL and Classifier gems to the Bundler install script, so that I could make use of the &ldquo;related posts&rdquo; capabilities of Jekyll.</p>

<p>The configuration is all done through YAML files, which, of course, requires editing them so that things work as I want them to. This includes defining a separate set of sidebar widgets for the individual post view page vs the list view page, adding my own configuration options for the theme, and activating the &ldquo;related posts&rdquo; plugin. I also added an abbreviations plugin, which contains a list of known abbreviations and wraps any it finds in posts or pages in <code>&lt;abbr&gt;</code> tags. I&rsquo;ve added significantly to this list, so that it covers more abbreviations.</p>

<h2>Conclusion</h2>

<p><a href="https://github.com/ShaunaGordon/octopress-theme-toytown">The theme is up on GitHub</a>, so feel free to fork it and play around with it. I made it largely for personal use, so I have next to no documentation for it, but I&rsquo;ve tried to make it simple enough that it should be easy to modify. It&rsquo;s also probably going to be an evolving project, as I find things I don&rsquo;t like or are broken entirely. All in all, it&rsquo;s been a fun project so far, though.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Anatomy of an Octopress Theme]]></title>
    <link href="http://ShaunaGordon.com/blog/2013/01/16/anatomy-of-an-octopress-theme/"/>
    <updated>2013-01-16T01:14:00+00:00</updated>
    <id>http://ShaunaGordon.com/blog/2013/01/16/anatomy-of-an-octopress-theme</id>
    <content type="html"><![CDATA[<p>As you can probably see, I&rsquo;ve updated my theme to something a little less Octopress. I still have a few changes to make, such as getting a background image that fits a larger viewport. It probably also needs some polishing for things that I haven&rsquo;t run across yet, and deal with IE8 and below&rsquo;s lack of support for RGBA and media queries, and I might toy around with how it responds to different sizes (oh yeah, and tweak how lists in the content are laid out), but other than that, it&rsquo;s pretty much done.</p>

<p>I&rsquo;m by no means a designer, so I doubt anyone but me will really like it, and if my history has anything to say, I probably won&rsquo;t like it myself in six months, but for the time being, at least, it&rsquo;s not the very generic, default theme. It also adds a base theme to the (currently insanely small) pool of Octopress themes.</p>

<!-- more -->


<h2>So, What&rsquo;s the Verdict?</h2>

<p>Overall, it wasn&rsquo;t too bad. If you&rsquo;re already familiar with CSS preprocessers, such as LESS or Sass, then you&rsquo;re already well on your way to modifying the theme, Octopress uses a series of Sass files to generate the final stylesheet. Unfortunately, I take issue with a number of things with how the default theme handles things. It&rsquo;s no wonder there haven&rsquo;t been very many themes made. For such a simplistic and hacker-friendly framework, it&rsquo;s kind of a pain in the ass to theme.</p>

<h3>The Sheer Number of Files</h3>

<p>For a theme that&rsquo;s supposed to be mobile friendly and responsive, there are a <em>ton</em> of files. Granted, they all get generated and compressed down into a single, minified file, but it seems Sass and Compass don&rsquo;t merge common declarations that are split between files. This results in a lot of declaration overwriting. Fire up your favorite browser&rsquo;s developer tools, and let it display overwritten declarations, and you&rsquo;ll see what I mean.</p>

<p>All those files also means a lot of digging to find things. A lot of files had variables, mixins, and/or extension templates within them, making it difficult to track down exactly what went where (and also made it possible to break the entire thing just by changing one element). It&rsquo;s no wonder they have the &ldquo;custom&rdquo; folder. At the folder level, all these files are organized pretty well; dig deeper, and you start getting into some trouble.</p>

<h3>Context-Specific Variables (And a Ton of Them)</h3>

<p>The default theme has 11 color variables, 6 font-family variables, and 13 measurement variables, just in the &ldquo;custom&rdquo; folder (there are a dozen or so more scattered throughout the theme SCSS files), and they&rsquo;re all context-specific names, like $sidebar-link-color, $footer-bg, and $sans. This is a bit of a nightmare for maintainability and customizability, because once you change the value of, say, $serif, to a sans-serif font, you&rsquo;ve destroyed the perceived meaning of the variable.</p>

<h3>Nuke The World Resets</h3>

<p>Yes, plural. There are two resets &ndash; one named &ldquo;reset-html5&rdquo; and one named &ldquo;global-reset&rdquo;. Global-reset, in particular, is a &ldquo;nuke the world&rdquo; reset. <em>Everything</em> is reset. Headings look the same as paragraphs, it&rsquo;s chaos. For a mobile-friendly site, that&rsquo;s a lot of things to get undone, only to be redone a short time later.</p>

<p>Especially when dealing with mobile-friendly and responsive sites, I&rsquo;m a big fan of normalizing versus &ldquo;reseting&rdquo;. The reset-html5 seems to leave enough things alone, though, that I left that one. I might ultimately just use normalize.css, though.</p>

<h3>Zero Documentation for Contributors</h3>

<p>Octopress has a lot going for it, including great documentation for <em>using</em> the system (there&rsquo;s documentation <em>everywhere</em>, even in the source!), and even some for doing basic modifications to the default theme (overriding styles, changing the custom HTML in the templates, etc). However, for hackers&hellip;there&rsquo;s not much. Kind of ironic for what touts itself as &ldquo;a blogging framework for hackers&rdquo; (or, as I&rsquo;ve been inclined to call it, &ldquo;Nerdpress&rdquo;).</p>

<p>&ldquo;But real hackers don&rsquo;t use documentation!&rdquo;</p>

<p>Yeah&hellip;about that. Hackers are, at the core, problem solvers. If there&rsquo;s something we want done, we&rsquo;ll get it done. However, having documentation designed for contributors is part of being a good open source project, especially once you get large enough to <em>have</em> contributors. It saves time and headache.</p>

<p>&ldquo;But Ruby&rsquo;s a readable language!&rdquo;</p>

<p>That may be, but SCSS isn&rsquo;t so readable (granted, it&rsquo;s better than plain CSS in most cases), and the issue is compounded when things are spread across a dozen files. Additionally, in code documentation is less about <em>what</em> and more about <em>why</em> something is done a certain way.</p>

<p>That said, the &ldquo;core team&rdquo; of this project I&rsquo;m pretty sure is still one person, so given that, it&rsquo;s not surprising that there&rsquo;s a lack of documentation for developers (especially since he&rsquo;s still active on it). Hopefully, that will be only a temporary complaint as the project continues to grow and mature.</p>

<h3>The Silver Lining</h3>

<p>Now, it really isn&rsquo;t all bad. There&rsquo;s actually a nifty little system in place that it seems most people don&rsquo;t know about. In the root folder, there&rsquo;s a hidden folder called <code>.themes</code> (for you Windows folks, the dot in front of the file or folder name makes it hidden). That&rsquo;s where your themes are stored. If you&rsquo;ve installed one of the custom themes, you may have noticed that that&rsquo;s where the instructions tell you to clone their git repository to, but if you&rsquo;ve never tried installing a theme, you probably don&rsquo;t know it&rsquo;s there.</p>

<p>Additionally, the <code>rake install</code> command actually takes a parameter, of which &ldquo;classic&rdquo; is the default. This parameter allows you to tell Octopress what theme to install. Once you find out these two little tidbits, you no longer have to worry so much about your customizations getting nuked by an Octopress update.</p>

<p>As I mentioned before, it&rsquo;s also pretty logical about how the files are organized within the folders, which can make it easier to find groups of styles, even if finding specific ones are more difficult. Also, the modular approach, while not without its drawbacks, does have the advantage of allowing you to leave alone whole files (or make only slight modifications) if you want to keep certain things (such as the styles for code blocks).</p>

<h2>Final Thoughts (or TL;DR)</h2>

<p>There&rsquo;s a pretty good base in the framework itself for allowing others to contribute themes, but it can certainly use some polish and refinement. I look forward to watching Octopress and its community evolve.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Templates for Munin]]></title>
    <link href="http://ShaunaGordon.com/blog/2011/04/18/jeremy-clarke-made-nice-sleek/"/>
    <updated>2011-04-18T00:00:00+00:00</updated>
    <id>http://ShaunaGordon.com/blog/2011/04/18/jeremy-clarke-made-nice-sleek</id>
    <content type="html"><![CDATA[<div class='post'>
<p>Jeremy Clarke made a nice, sleek theme/template set for Munin (see his <a href="http://simianuprising.com/2011/02/19/raven-my-custom-theme-templates-for-munin/" target="_blank">original post</a> about it). Since, like him, I hate the default theme (it's ugly, and done in 90s style table layout), I wanted to change it, but I currently don't have the time to write my own theme (not that there's much documentation on the topic, despite how awesome Munin actually is). Jeremy's seems to be the only one on the entire Internet aside from the default and default-alt themes, and he did a great job with what he had. However, I had some issues getting it working on the version I'm running (1.4.4). It was mainly just missing files (kinda-sorta-not really his fault, Munin should probably just ignore things like missing images and allow the page to break, instead of halting copying the files to the html directory).</p><p>Anywho, so I grabbed the copy by Kim (in the comments), who was kind enough to update the theme for 1.4.* (it was originally for 1.3.*), but her copy didn't have the required files, either. So, I got it working in my test environment and then updated the template folder with the necessary files. I'm posting it here for easy downloading.</p><p><a title="Raven theme GitHub project" href="https://github.com/ShaunaGordon/raven-munin-theme">Download Raven Munin theme.</a></p></div>

]]></content>
  </entry>
  
</feed>
